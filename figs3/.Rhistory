elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(face = "bold"))) +
labs(title = "Association between Ozone and Meterological Data",
y = "Ozone (ppb)") +
theme_bw() # + theme(legend.position = 'none')
# ggsave("../images/oz_scatterplot_assoc.png", plot = p)
p
p
#| label: giant_vis
df_f <- full_join(oz, pred, by = c("Date","OAD")) %>%
filter(OAD %in% c("arr", "dfw", "elp", "hgb", "san")) %>%
mutate(Month = as.factor(month(Date)),
Year = as.factor(year(Date)),
IsOAD = as.factor(IsOAD),
WMO = as.factor(WMO),
#Sunlight_Hrs = Sunlight_Hrs - mean(Sunlight_Hrs),
#MeanT = MeanT - mean(MeanT),
#WindSpeed = WindSpeed - mean(WindSpeed),
#RelHum = RelHum - mean(RelHum)
)
regions <- c('arr' = 'Austin-Round Rock',
'dfw'='Dallas-Fort Worth',
'elp'='El Paso',
'hgb'='Houston-Galveston-Brazoria',
'san'='San Antonio')
weather <- c("MeanT" = "Mean Temperature (C)",
"RelHum" = "Relative Humidity (%)",
"Sunlight_Hrs" = "Sunlight Hours",
"WindSpeed" = "Wind Speed (km/h)")
df_long <- df_f %>%
pivot_longer(cols = c(MeanT, RelHum, Sunlight_Hrs, WindSpeed),
names_to = "X_Var", values_to = "X_Value") %>%
mutate(OAD = factor(OAD,
levels = names(regions),
labels = regions),
X_Var = factor(X_Var,
levels = names(weather),
labels = weather))
col_0 <- "black"
col_1 <- "#88CCEE"
col_line <- "grey50"
# Region colors
cols <- brewer.pal(10,"BrBG")[-5]
factor_colors <- c('arr'=cols[1],
'dfw'=cols[4],
'elp'=cols[5],
'hgb'=cols[6],
'san'=cols[8])
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(face = "bold"))) +
labs(title = "Association between Ozone and Meterological Data",
y = "Ozone (ppb)") +
theme_bw() # + theme(legend.position = 'none')
# ggsave("../images/oz_scatterplot_assoc.png", plot = p)
p
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(face = "bold",
color = c("white",
rep("black",3),
"white")))) +
labs(title = "Association between Ozone and Meterological Data",
y = "Ozone (ppb)") +
theme_bw() # + theme(legend.position = 'none')
p
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(
face = "bold",
color = c("white", "black", "black", "black", "white")))) +
labs(title = "Association between Ozone and Meterological Data",
y = "Ozone (ppb)") +
theme_bw() # + theme(legend.position = 'none')
p
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(
face = rep("bold",5),
color = c("white", "black", "black", "black", "white")))) +
labs(title = "Association between Ozone and Meterological Data",
y = "Ozone (ppb)") +
theme_bw() # + theme(legend.position = 'none')
p
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(
#face = rep("bold",5),
color = c("white", "black", "black", "black", "white")))) +
labs(title = "Association between Ozone and Meterological Data",
y = "Ozone (ppb)") +
theme_bw() # + theme(legend.position = 'none')
p
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(
#face = rep("bold",5),
color = c("white", "black", "black", "black", "white")))) +
labs(title = "Association between Ozone and Meterological Data",
x = "OpenMeteo Data",
y = "Ozone (ppb)") +
theme_bw() # + theme(legend.position = 'none')
p
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(
#face = rep("bold",5),
color = c("white", "black", "black", "black", "white")))) +
labs(title = "Association between Ozone and OpenMeteo Meterological Data",
x = "OpenMeteo Data (Parameters shown on top)",
y = "Ozone (ppb)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) # + theme(legend.position = 'none')
p
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(
#face = rep("bold",5),
color = c("white", "black", "black", "black", "white")))) +
labs(title = "Association between Observed Maximum 8h Ozone and OpenMeteo Meterological Data",
x = "OpenMeteo Data (Parameters shown on top)",
y = "Ozone (ppb)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) # + theme(legend.position = 'none')
p
#| label: giant_vis
df_f <- full_join(oz, pred, by = c("Date","OAD")) %>%
filter(OAD %in% c("arr", "dfw", "elp", "hgb", "san")) %>%
mutate(Month = as.factor(month(Date)),
Year = as.factor(year(Date)),
IsOAD = as.factor(IsOAD),
WMO = as.factor(WMO),
#Sunlight_Hrs = Sunlight_Hrs - mean(Sunlight_Hrs),
#MeanT = MeanT - mean(MeanT),
#WindSpeed = WindSpeed - mean(WindSpeed),
#RelHum = RelHum - mean(RelHum)
)
regions <- c('arr' = 'Austin-Round Rock',
'dfw'='Dallas-Fort Worth',
'elp'='El Paso',
'hgb'='Houston-Galveston-Brazoria',
'san'='San Antonio')
weather <- c("MeanT" = "Mean Temperature (C)",
"RelHum" = "Relative Humidity (%)",
"Sunlight_Hrs" = "Sunlight Hours",
"WindSpeed" = "Wind Speed (km/h)")
df_long <- df_f %>%
pivot_longer(cols = c(MeanT, RelHum, Sunlight_Hrs, WindSpeed),
names_to = "X_Var", values_to = "X_Value") %>%
mutate(OAD = factor(OAD,
levels = names(regions),
labels = regions),
X_Var = factor(X_Var,
levels = names(weather),
labels = weather))
col_0 <- "black"
col_1 <- "#E7298A"
col_line <- "grey50"
# Region colors
cols <- brewer.pal(10,"BrBG")[-5]
factor_colors <- c('arr'=cols[1],
'dfw'=cols[4],
'elp'=cols[5],
'hgb'=cols[6],
'san'=cols[8])
p <- df_long %>% ggplot(aes(x = X_Value, y = Ozone)) +
geom_hline(yintercept = 70, linetype = "dashed") +
geom_point(aes(color = IsOAD, shape = IsOAD)) +
geom_smooth(color = col_line, method = "lm", se = TRUE) +
scale_color_manual(values = c("0" = col_0, "1" = col_1)) +
facet_grid2(rows = vars(OAD),
cols = vars(X_Var),
scales = "free",
strip = strip_themed(
background_x =
elem_list_rect(fill = "white"),
background_y =
elem_list_rect(fill = factor_colors),
text_y = elem_list_text(
#face = rep("bold",5),
color = c("white", "black", "black", "black", "white")))) +
labs(title = "Association between Observed Maximum 8h Ozone and OpenMeteo Meterological Data",
x = "OpenMeteo Data (Parameters shown on top)",
y = "Ozone (ppb)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) # + theme(legend.position = 'none')
# ggsave("../images/oz_scatterplot_assoc.png", plot = p)
p
View(hgb)
rm(list = ls())
library(RColorBrewer)
display.brewer.all(colorblindFriendly = T)
brewer.pal(11, 'PRGn')
brewer.pal(4, 'Greens')
display.brewer.pal(colorblindfriendly= TRUE)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = T)
brewer.pal(12, 'Paired')
sudo xcodebuild -license accept
setwd("~/Library/CloudStorage/Box-Box/BooleanStats/BooleanStatsCode/figs3")
set.seed(2024)
library('lme4')
library('effects')
library('broom')
library('dplyr')
library('multcomp')
# Define logics
and.logic <- c(0, 0, 0, 1)
or.logic <- c(0, 1, 1, 1)
nand.logic <- c(1, 1, 1, 0)
nor.logic <- c(1, 0, 0, 0)
xnor.logic <- c(1, 0, 0, 1)
xor.logic <- c(0, 1, 1, 0)
imply.logic <- c(1,0,1,1)
nimply.logic <- c(0,1,0,0)
# Order logics
logic_list <- list('AND' = and.logic,
'OR' = or.logic,
'NAND' = nand.logic,
'NOR' = nor.logic,
'XNOR' = xnor.logic,
'XOR' = xor.logic,
'IMPLY' = imply.logic,
'NIMPLY' = nimply.logic)
# Define simulation conditions
sim.means <- read.csv("simulation_conditions.csv",row.names=1,header=TRUE)
conditions <- sim.means |> row.names()
samples <- 2:30
variance.values <- 1:10 * 0.1
n.mc <- 1e4
# Pull out the conditions for plotting
samples_select <- rep(c(3, 5, 30), each = length(conditions))
conditions_select <- rep(conditions, times = 3)
conditions_select
samples_select
files <- paste0('beta_montecarlo/', conditions_select,
'_var_0.1_n_',samples_select, '.csv')
files
# Pull out the select samples for beta plot
samples_select <- c(3, 5, 30)
for (condition in conditions){
files <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',samples_select, '.csv')
}
files
df <- lapply(files, read.csv) |> bind_rows()
head(df)
dim(df)
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
sample <- samples_select[1]
sample
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
f
dat <- read.csv(f) |>
mutate(Sample = sample)
dim(dat)
head(dat)
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
dat <- read.csv(f) |>
pull(Beta) |>
rename_with(~paste0('Beta_n_', sample))
newColName <- paste0('Beta_n_', sample)
newColName
dat <- read.csv(f) |>
pull(Beta) |>
rename_with(~newColName)
?rename_with
dat <- read.csv(f) |>
select(Beta) |>
rename_with(~newColName)
dat <- read.csv(f)
colnames(dat)
dat <- read.csv(f) |>
select(Beta)
?select
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
class(dat)
head(dat)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
head(dat)
dim(dat)
df <- lapply(samples_select, function(sample) {
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
}) |>
bind_rows()
df
head(df)
df <- lapply(samples_select, function(sample) {
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
}) |>
bind_rows()
dim(df)
head(df)
sample <- 5
sample
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
dat
head(dat)
samples_select
# Pull out the select samples for beta plot
samples_select <- c(3, 5, 30)
for (condition in conditions){
files <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',samples_select, '.csv')
df <- lapply(samples_select, function(sample) {
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
}) |>
bind_rows()
}
df
setwd("~/Library/CloudStorage/Box-Box/BooleanStats/BooleanStatsCode/figs3")
set.seed(2024)
library(lme4)
library(effects)
library(broom)
library(dplyr)
library(multcomp)
# Define logics
and.logic <- c(0, 0, 0, 1)
or.logic <- c(0, 1, 1, 1)
nand.logic <- c(1, 1, 1, 0)
nor.logic <- c(1, 0, 0, 0)
xnor.logic <- c(1, 0, 0, 1)
xor.logic <- c(0, 1, 1, 0)
imply.logic <- c(1,0,1,1)
nimply.logic <- c(0,1,0,0)
# Order logics
logic_list <- list('AND' = and.logic,
'OR' = or.logic,
'NAND' = nand.logic,
'NOR' = nor.logic,
'XNOR' = xnor.logic,
'XOR' = xor.logic,
'IMPLY' = imply.logic,
'NIMPLY' = nimply.logic)
# Define simulation conditions
sim.means <- read.csv("simulation_conditions.csv",row.names=1,header=TRUE)
conditions <- sim.means |> row.names()
samples <- 2:30
variance.values <- 1:10 * 0.1
n.mc <- 1e4
# Pull out the select samples for beta plot
samples_select <- c(3, 5, 30)
for (condition in conditions){
files <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',samples_select, '.csv')
df <- lapply(samples_select, function(sample) {
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
}) |>
bind_rows()
}
df
df <- lapply(samples_select, function(sample) {
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
})
df
df[[2]]
df <- lapply(samples_select, function(sample) {
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
}) |> bind_cols()
head(df)
dim9df
dim(df)
lapply(df, mean())
lapply(df, mean)
lapply(df, var)
for (condition in conditions){
files <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',samples_select, '.csv')
df <- lapply(samples_select, function(sample) {
f <- paste0('beta_montecarlo/', condition,
'_var_0.1_n_',sample, '.csv')
newColName <- paste0('Beta_n_', sample)
dat <- read.csv(f) |>
dplyr::select(Beta) |>
rename_with(~newColName)
}) |> bind_cols()
write.csv(df, paste0('sim_data/', condition,
'_betas_', 'n_3_5_30.csv'))
}
